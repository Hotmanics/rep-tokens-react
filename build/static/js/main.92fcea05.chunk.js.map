{"version":3,"sources":["Components/ConnectWallet/ConnectWallet.js","Components/Cards/Centered Card/CenteredCard.js","Components/GrantRoles/GrantRoles.js","Components/GeneralContractInfo/GeneralContractInfo.js","Components/NavBar/NavBar.js","Components/Distributing/Distributing.js","Components/Minting/Minting.js","Components/Balance/Balance.js","Components/SXSW/SXSW.js","Components/Role Readers/RolesReader.js","Components/LoggedInSection/LoggedInSection.js","Components/Lost/Lost.js","Components/AddNetwork/AddNetwork.js","App.js","reportWebVitals.js","index.js","Components/OneOffDistributorInfo.js","Components/RepTokenInfo.js","RepTokensABI.js","OneOffDistributorABI.js"],"names":["providerOptions","walletconnect","package","WalletConnectProvider","options","chainId","infuraId","rpc","coinbasewallet","CoinbaseWalletSDK","appName","darkMode","binancechainwallet","web3Modal","Web3Modal","network","cacheProvider","displayNoInjectedProvider","disableInjectedProvider","ConnectWallet","props","truncated","output","useState","connectedWalletInfo","setConnectedWalletInfo","connectWallet","clearCachedProvider","connect","provider","etherProvider","ethers","providers","Web3Provider","send","listAccounts","accounts","account","getSigner","onWalletConnected","boastMessage","reason","undefined","type","onClick","substring","accountInfo","id","className","CenteredCard","classes","title","children","GrantRoles","toText","setToText","selectedRole","setSelectedRole","handleOnToChanged","event","target","value","console","contract","MINTER_ROLE","log","address","repTokenAddress","Contract","repTokensABI","grantRole","roleInBytes","tx","onBoastMessage","wait","grantTheRole","grantMinterRole","grantDistributorRole","grantBurnerRole","grantSoulboundTokenTransfererRole","grantAdminRole","BURNER_ROLE","DISTRIBUTOR_ROLE","TOKEN_MIGRATOR_ROLE","DEFAULT_ADMIN_ROLE","maxMint","setMaxMint","setMax","setMaxMintAmount","onChange","GeneralContractInfo","useEffect","getAllHolders","getMaxMintAmountPerTx","onContractPageSet","test","maxMintAmount","assets","setAssets","maxMintAmountPerTx","x","toNumber","soulboundAssets","getOwnersOfTokenID","soulboundOwners","j","length","balanceOf","amount","push","owner","method","redeemableAssets","redeemableOwners","lifetime","map","data","index","Math","random","redeemable","NavBar","getRoles","finalRoles","minter","distributor","admin","roles","setRoles","ADMIN_ROLE","hasRole","hasAdminRole","hasMinter","hasDistributor","hasBurner","hasTokenMigrator","currentRoles","testForRole","name","i","setState","handleClick","_state","onStateSet","Distributing","destination","destinations","setDestinations","distributeBatchForInputFields","dests","amounts","distributeBatch","addrs","distribute","from","to","setAmount","input","placeholder","handleReceiversChanged","handleAmountsChanged","Minting","mint","Balance","getBalance","soulboundBalance","setSoulboundBalance","redeemableBalance","setRedeemableBalance","soulboundName","setSoulboundName","soulboundDescription","setSoulboundDescription","soulboundImage","setSoulboundImage","redeemableImage","setRedeemableImage","redeemableName","setRedeemableName","redeemableDescription","setRedeemableDescription","destinationWallet","setDestinationWallet","setIsLoadingBalance","balanceOf0","balanceOf1","uri","soulboundURI","replace","getJson","soulboundJson","description","image","redeemableURI","redeemableJson","destinationWallets","setUserDestination","fetch","response","json","responseJson","error","src","SXSW","claimBeersGasless","contractAddress","contractABI","paymasterAddress","gsnConfig","gsnProvider","RelayProvider","newProvider","window","ethereum","config","init","provider2","signer","aContract","safeTransferFrom","distributeOneOffTokensGasless","redeem","oneOffAddress","OneOffDistributorABI","claimbeer","RolesReader","finalString","setFinalString","hasMinterRole","hasDistributorRole","hasBurnerRole","LoggedInSection","handleLogger","message","setContractInfoTrigger","setOutput","state","contractInfoTrigger","Lost","href","AddNetwork","request","params","rpcUrls","chainName","nativeCurrency","symbol","decimals","blockExplorerUrls","App","document","extra","setMessage","loginComponents","setLoginComponents","info","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","abi","require","module","exports"],"mappings":"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","file":"static/js/main.92fcea05.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\nimport { ethers } from \"ethers\"\nimport \"./ConnectWallet.css\";\n\nconst providerOptions = {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        chainId: 137,\n        infuraId: \"https://polygon-mainnet.infura.io/v3/63bf9ece2f7d4706b34ffdee6f9e63ab\", // required\n        rpc: \"https://polygon-mainnet.infura.io/v3/63bf9ece2f7d4706b34ffdee6f9e63ab\"\n      },\n    },\n    coinbasewallet: {\n      package: CoinbaseWalletSDK, // Required\n      options: {\n        appName: \"web3modal\", // Required\n        infuraId: \"https://mainnet.infura.io/v3/cadcede23805433d8a998682be5bc221\", // Required\n        rpc: \"\", // Optional if `infuraId` is provided; otherwise it's required\n        chainId: 1, // Optional. It defaults to 1 if not provided\n        darkMode: false, // Optional. Use dark theme, defaults to false\n      },\n    },\n    binancechainwallet: {\n      package: true,\n    },\n  };\n  \n  const web3Modal = new Web3Modal({\n    network: \"mainnet\", // optional\n    cacheProvider: false, // optional\n    displayNoInjectedProvider: false,\n    disableInjectedProvider: false,\n    providerOptions, // required\n  });\n\nconst ConnectWallet = (props)=> {\n\n    const [connectedWalletInfo, setConnectedWalletInfo] = useState('');\n\n    const connectWallet = async () => {\n        //keep for dev purposes - if not present then app will remember Metamask and not display the modal\n        web3Modal.clearCachedProvider()\n    \n        try{\n\n            const provider = await web3Modal.connect();\n            const etherProvider = new ethers.providers.Web3Provider(provider);\n        \n            await etherProvider.send(\"eth_requestAccounts\");\n            const accounts = await etherProvider.listAccounts();\n  \n            const connectedWalletInfo = {\n              account: accounts[0],\n              provider: etherProvider.getSigner(),\n          }\n  \n          props.onWalletConnected(connectedWalletInfo);\n          setConnectedWalletInfo(connectedWalletInfo);\n        } catch (e) {\n          props.boastMessage(e.reason);\n        }\n\n    };\n\n    let truncated;\n    let output;\n\n    if (connectedWalletInfo.account === undefined) {\n        output = <button type=\"button\" onClick={connectWallet}>\n            Login \n        </button>;\n    } else {\n      truncated = connectedWalletInfo.account.substring(0, 10) + \"...\";\n    }\n\n    let accountInfo = connectedWalletInfo.account === undefined ? <div></div>\n                        : <div id=\"holla\">Logged in as: { truncated }</div>\n\n    return <div className=\"connectWallet\">\n        { output } \n        { accountInfo }\n        </div>\n}\n\nexport default ConnectWallet;","import \"./CenteredCard.css\";\n\nconst CenteredCard = (props)=> {\n    const classes = 'centeredCard ' + props.className;\n    return <div className={classes}><h2>{props.title}</h2>{props.children}</div>\n}\n\nexport default CenteredCard;","import { ethers } from \"ethers\"\nimport React, { useState } from 'react';\nimport \"./GrantRoles.css\";\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\nconst GrantRoles = (props)=> {\n\n    const [toText, setToText] = useState('');\n    const [selectedRole, setSelectedRole] = useState('distributor');\n\n    const handleOnSelectedRole = (event) => {\n        setSelectedRole(event.target.value);\n    }\n\n    const handleOnToChanged = async (event)=> {\n        setToText(event.target.value);\n\n        console.log(await contract.MINTER_ROLE())\n    }\n\n    const address = repTokenAddress;\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n    const grantRole = async (roleInBytes)=> {\n        try{\n            let tx = await contract.grantRole(roleInBytes, toText);\n            props.onBoastMessage(\"granting role \" + roleInBytes + \" to \" + toText + \"...\");\n            await tx.wait();\n            props.onBoastMessage(\"granted role \" + roleInBytes + \"!\");\n        } catch (e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    const grantTheRole = async ()=> {\n        console.log(selectedRole);\n\n        if (selectedRole === 'minter') {\n            await grantMinterRole();\n        }\n        if (selectedRole === 'distributor')\n            await grantDistributorRole();\n        if (selectedRole === 'burner')\n            await grantBurnerRole();\n        if (selectedRole === 'Soulbound Token Transferer')\n            await grantSoulboundTokenTransfererRole();\n        if (selectedRole === 'admin') {\n            await grantAdminRole();\n        }\n    }\n\n    const grantBurnerRole = async ()=> {\n        await grantRole(await contract.BURNER_ROLE());\n    }\n\n    const grantDistributorRole = async ()=> {\n        await grantRole(await contract.DISTRIBUTOR_ROLE());\n    }\n\n    const grantMinterRole = async ()=> {\n        await grantRole(await contract.MINTER_ROLE());\n    }\n\n    const grantSoulboundTokenTransfererRole = async ()=> {\n        await grantRole(await contract.TOKEN_MIGRATOR_ROLE());\n    }\n\n    const grantAdminRole = async ()=> {\n        await grantRole(await contract.DEFAULT_ADMIN_ROLE());\n    }\n\n    const mint = async (to, amount)=> {\n        try{\n            let tx = await contract.mint(to, amount, []);\n            \n            props.onBoastMessage(\"minting tokens to \" + to + \"...\");\n            await tx.wait();\n            props.onBoastMessage(\"minted tokens to \" + to + \"!\");\n        } catch(e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    const [maxMint, setMaxMint] = useState(0);\n    const handleMaxMint = (event)=> {\n        setMaxMint(event.target.value);\n    }\n\n    const setMax = async ()=> {\n        try{\n            let tx = await contract.setMaxMintAmount(maxMint);\n            \n            props.onBoastMessage('setting max mint to ' + maxMint + \"...\");\n            await tx.wait();\n            props.onBoastMessage(`set max mint to ${maxMint}!`);\n        } catch(e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    return <CenteredCard className=\"grantMinterRole\" title=\"Grant Roles\">\n        <p>Recipient</p>\n        <input type=\"text\" onChange={handleOnToChanged}/>\n        <div id=\"aye\"><select onChange={handleOnSelectedRole} >  \n        <option> distributor </option>  \n            <option> minter </option>  \n            <option> burner </option>  \n            <option> admin </option>  \n            <option> token migrator </option>  \n        </select>  </div>\n\n        <button onClick={grantTheRole}>Grant Role</button>\n\n        <div>\n            <p>Max Mint Amount</p>\n            <input type=\"number\" onChange={handleMaxMint}/>\n            <div>\n                <button onClick={setMax}>Set Max</button>\n            </div> \n        </div>\n\n        </CenteredCard>\n}\n\nexport default GrantRoles;","// import \"./GeneralContractInfo.css\";\nimport { ethers } from \"ethers\"\nimport React, { useState, useEffect } from \"react\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\nimport \"./GeneralContractInfo.css\";\n\nconst GeneralContractInfo = (props)=> {\n    useEffect(()=> {\n        if (props.onContractPageSet) {\n            test();\n        }\n\n        async function test() {\n            await getAllHolders();  \n            await getMaxMintAmountPerTx();\n    \n        }\n    }, [props.onContractPageSet]);\n\n    const [maxMintAmount, setMaxMintAmount] = useState();\n    const [assets, setAssets] = useState({});\n\n    const address = repTokenAddress;\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n    const getMaxMintAmountPerTx = async ()=> {\n        try {\n            let x = await contract.maxMintAmountPerTx();\n            setMaxMintAmount(x.toNumber());\n            \n        } catch (e) {\n\n        }\n    }\n\n    const getAllHolders = async ()=> {\n\n        const soulboundAssets = [];\n\n        try {\n            let soulboundOwners = await contract.getOwnersOfTokenID(0);\n\n            \n            for (let j = 0; j < soulboundOwners.length; j++) {\n                let amount = await contract.balanceOf(soulboundOwners[j], 0); //Sometimes errors out here. Sometimes does not error out.\n                soulboundAssets.push({\n                    owner: soulboundOwners[j],\n                    amount: amount.toNumber()\n                })\n            }\n        } catch (e) {\n            if (e.method === \"balanceOf(address,uint256)\") {\n                console.log(\"errored on \" + e.method);\n            }\n        }\n\n        const redeemableAssets = [];\n        try {\n            let redeemableOwners = await contract.getOwnersOfTokenID(1);\n\n            for (let j = 0; j < redeemableOwners.length; j++) {\n                let amount = await contract.balanceOf(redeemableOwners[j], 1);\n                redeemableAssets.push({\n                    owner: redeemableOwners[j],\n                    amount: amount.toNumber()\n                })\n            }\n        } catch (e) {\n            if (e.method === \"balanceOf(address,uint256)\") {\n                console.log(\"errored on \" + e.method);\n            }\n        }\n        \n        const assets = {\n            soulboundAssets: soulboundAssets,\n            redeemableAssets: redeemableAssets\n        }\n\n\n        setAssets(assets);\n    }\n\n    let lifetime = <div><p>Loading Lifetime Token Owners...</p></div>;\n\n    if (assets.soulboundAssets !== undefined) {\n        lifetime = <div>\n            <h2>Lifetime Tokens</h2>\n            <p>Number Of Holders: {assets.soulboundAssets.length}</p>\n            {\n                assets.soulboundAssets.map((data, index) => (\n                    <p id=\"wrap\" key={Math.random()}>{data.owner} owns {data.amount}</p>\n                ))\n            }\n        </div>\n    }\n\n    let redeemable = <div><p>Loading Redeemable Token Owners...</p></div>;\n    if (assets.redeemableAssets !== undefined) {\n        redeemable = <div>\n            <h2>Redeemable Tokens</h2>\n            <p>Number Of Holders: {assets.redeemableAssets.length}</p>\n            {\n                assets.redeemableAssets.map((data, index) => (\n                    <p id=\"wrap\" key={Math.random()}>{data.owner} owns {data.amount}</p>\n                ))\n            }\n        </div>\n    }\n\n    let maxMint = <div><p>Loading Max Mint...</p></div>;\n\n    if (maxMintAmount !== undefined) {\n        maxMint = <div>\n            <p>Max Mint Amount Per Tx: {maxMintAmount}</p>\n        </div>\n    }\n\n    return <div className=\"generalContractInfo\" title=\"Contract Info\">\n        <h2>Contract Info</h2>\n        <p id=\"wrap\">Contract Address: { address }</p>\n        { maxMint }\n        <p>-------------------------------------------</p>\n        {\n            lifetime\n        }\n        <p>------</p>\n        {\n            redeemable\n        }\n\n        </div>\n}\n\nexport default GeneralContractInfo;\n","import React, { useEffect, useState } from 'react';\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport \"./NavBar.css\";\nconst NavBar = (props)=> {\n\n    useEffect(()=> {\n        getRoles();\n    }, []);\n\n    const [roles, setRoles] = useState([]);\n\n    const getRoles = async ()=> {\n        let ADMIN_ROLE = await props.contract.DEFAULT_ADMIN_ROLE();\n        let MINTER_ROLE = await props.contract.MINTER_ROLE();\n        let DISTRIBUTOR_ROLE = await props.contract.DISTRIBUTOR_ROLE();\n        let BURNER_ROLE = await props.contract.BURNER_ROLE();\n        let TOKEN_MIGRATOR_ROLE = await props.contract.TOKEN_MIGRATOR_ROLE();\n\n        let hasAdminRole = await props.contract.hasRole(ADMIN_ROLE, props.connectedWalletInfo.account);\n        let hasMinter = await props.contract.hasRole(MINTER_ROLE, props.connectedWalletInfo.account);\n        let hasDistributor = await props.contract.hasRole(DISTRIBUTOR_ROLE, props.connectedWalletInfo.account);\n        let hasBurner = await props.contract.hasRole(BURNER_ROLE, props.connectedWalletInfo.account);\n        let hasTokenMigrator = await props.contract.hasRole(TOKEN_MIGRATOR_ROLE, props.connectedWalletInfo.account);\n\n        let currentRoles = [];\n\n        if (hasAdminRole) {\n            currentRoles.push(\"Admin\");\n        }\n\n        if (hasMinter) {\n            currentRoles.push(\"Minter\");\n        }\n\n        if (hasDistributor) {\n            currentRoles.push(\"Distributor\");\n        }\n\n        if (hasBurner) {\n            currentRoles.push(\"Burner\");\n        }\n\n        if (hasTokenMigrator) {\n            currentRoles.push(\"Token Migrator\");\n        }\n\n        setRoles(currentRoles);\n    }\n\n    const testForRole = (roles, name)=> {\n        for (let i = 0; i < roles.length; i++) {\n            console.log(\"ae\");\n            console.log(roles[i]);\n            if (roles[i] === name) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    const [state, setState] = useState('');\n\n    const handleClick = (_state)=> {\n        setState(_state);\n        props.onStateSet(_state);\n    }   \n\n    let finalRoles = [];\n    finalRoles = roles;\n\n    let minter;\n    if (testForRole(finalRoles, \"Minter\")) {\n        minter = <button onClick={()=> {handleClick('mint')}}>\n            Minting\n        </button>;\n    }\n\n    let distributor;\n    if (testForRole(finalRoles, \"Distributor\")) {\n        distributor = \n        <button onClick={()=> {handleClick('distribute')}}>\n            Distributing\n        </button>;\n    }\n\n    let admin;\n    if (testForRole(finalRoles, \"Admin\")) {\n        admin = \n        <button onClick={()=> {handleClick('roleGrant')}}>\n            Admin\n        </button>;\n    }\n\n    return <div className=\"navBar\">\n            <button onClick={()=> {handleClick('contractInfo')}}>\n                Contract Info\n            </button>\n\n            <button onClick={()=> {handleClick('balance')}}>\n                Account\n            </button>\n\n            <div>\n            { minter }        \n            { distributor }\n            { admin }\n            </div>\n    </div>\n}\n\nexport default NavBar;","import \"./Distributing.css\";\nimport { ethers } from \"ethers\"\nimport React, { useState } from 'react';\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\n\nconst Distributing = (props)=> {\n    const address = repTokenAddress;\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n    const [destinations, setDestinations] = useState([{destination: \"\", amount: \"\"}]);\n    const addDestination = () => {\n        let newField = {\n            destination: \"\",\n            amount: \"\"\n        }\n\n        setDestinations([...destinations, newField]);\n    }\n    \n    const handleReceiversChanged = (index, event)=> {\n        let data = [...destinations];\n        data[index].destination = event.target.value;\n        setDestinations(data);\n    }\n\n    const handleAmountsChanged = (index, event)=> {\n        let data = [...destinations];\n        data[index].amount = event.target.value;\n        setDestinations(data);\n    }\n\n    const distributeBatchForSXSW = async ()=> {\n        // const wallets = [\n        //     \"0xF5B590DaA789aB1a1D9AE2AF10eFf0aA28aA0Aa9\",\n        //     \"0xc0De39763a8997A62A01982BF41f99Fc5E8510a8\",\n        //     \"0x322Ebd2Aa9Df8f33cc2010AF5375aFCdDe54397e\",\n        //     \"0x80f5827d3e38c16b15772e6724192890059add8d\",\n        //     \"0x19dE2910006ea2f51Ba7387DF9fCcF0eb3F76d74\",\n        //     \"0xb36c4aA5cD17376d682F2ff2709316487E601aF2\",\n        //     \"0x51603C7059f369aB04B16AddFB7BB6c4e34b8523\",\n        //     \"0xf83b3A823653E8351b173Fa2Ae083Af37EAbCC01\",\n        //     \"0x10cfe05d0E024D707b1eae38aA17Da71E0ce0Fc0\",\n        //     \"0x7aEf0f86eFEAfeA60F8DaC562332B54a53235f6F\",\n        //     \"0x4a071fD98dD1f0B3C14999eCC07926166Dc544B4\",\n        //     \"0x67F882FEDBfF23A0AEC58aC8ecc52fA03db5D425\",\n        //     \"0xDd1444397d3c68C0CF55aAbdFa1Daf040200Bc46\",\n        //     \"0x448aB48379978aa1CAD3A4356D45b13783E57Bb9\",\n        //     \"0x806A90fbD8cAe816c870758ff9D7A74547265711\",\n        //     \"0x9BFB45eBA673BE3EC0a4f7C3f026af1164Fb9d74\",\n        //     \"0x1B2C142ae4B9c72d2B8957079563d171B7F72892\",\n        //     \"0x93BcBff59c6C440861404cb30c9C456315600667\",\n        //     \"0x53aB746A4D68e3d6287E9ABb56BB53c654DCfC34\",\n        //     \"0x0c2d567418Cf8Ed5A50681DaF159a3cb1cdF19B2\",\n        //     \"0xfaDD3b0DcfB0Ae4A0ee676fAb249Bfbb0560C78F\",\n        //     \"0xd5B107A4ACF1573A727111AAA000E1eCc933CE3f\",\n        //     \"0x1d56AbEFEC79e302808C9e392d846E8666152C1C\",\n        //     \"0xa01b50d22c5205fb8729bb783b7eb533a67d0253\",\n        //     \"0xec768d5a6C624A54b221fb1e6E85bd242c4EEB80\",\n        //     \"0x0c90D90f0d38c21ecB15d5Bd32B030977eeB2e31\",\n        //     \"0x7Fd611Af09BeFB5f47aBB19FCC25a22997aEb0b1\",\n        //     \"0x0364E892f048be3bfA9b32ff3565a1Ac01133296\",\n        //     \"0xb6136ACbe62E55b875b6D2d83bBc19A72C192B21\",\n        //     \"0xD6cE498dcf28D5f6A3fe10887B62B114bBf06DA9\",\n        //     \"0x38F22986E3416f0b1084393c28b92DA6E82B6986\",\n        //     \"0x05670cA6db3296c109a0CAE1d554520b215194Ee\",\n        //     \"0x68812F136Ad7f76817fEE39c3fF2848a5d5614aA\",\n        //     \"0xd217be00b92af01Aa3D6d9c3B63D1b4c5443503C\",\n        //     \"0x6B2f60F7292FE185E1E55149bE5a78c22cb7d7A9\",\n        //     \"0x5989B02C863857d7E42f3ae264F8A0faCD6baD61\",\n        //     \"0x4D59A872f019A57f82117eE3c07b2b9546338E09\",\n        //     \"0x4c31FC81609f39F8c54e227a0F54B9430AbA96BA\",\n        //     \"0x896C20Da40c2A4df9B7C98B16a8D5A95129161a5\",\n        //     \"0x75946d9F56C652e5DB8FFf158dFe3C54dd57Fb24\",\n        //     \"0x322Ebd2Aa9Df8f33cc2010AF5375aFCdDe54397e\",\n        //     \"0xda3Dc869B55035B61253Ef6ae3809709B8C374C9\",\n        //     \"0x69633cde8bAAfd4478B0D10d6480E3Ed2CEA588e\"\n        // ];\n\n        const wallets = [\n            \"0xF5B590DaA789aB1a1D9AE2AF10eFf0aA28aA0Aa9\",\n            \"0xc0De39763a8997A62A01982BF41f99Fc5E8510a8\",\n            \"0x322Ebd2Aa9Df8f33cc2010AF5375aFCdDe54397e\",\n            \"0x80f5827d3e38c16b15772e6724192890059add8d\",\n            \"0x19dE2910006ea2f51Ba7387DF9fCcF0eb3F76d74\",\n            \"0xb36c4aA5cD17376d682F2ff2709316487E601aF2\",\n            \"0x51603C7059f369aB04B16AddFB7BB6c4e34b8523\",\n            \"0xf83b3A823653E8351b173Fa2Ae083Af37EAbCC01\",\n            \"0x10cfe05d0E024D707b1eae38aA17Da71E0ce0Fc0\",\n            \"0x7aEf0f86eFEAfeA60F8DaC562332B54a53235f6F\",\n            \"0x4a071fD98dD1f0B3C14999eCC07926166Dc544B4\",\n            \"0x67F882FEDBfF23A0AEC58aC8ecc52fA03db5D425\",\n            \"0xDd1444397d3c68C0CF55aAbdFa1Daf040200Bc46\",\n            \"0x448aB48379978aa1CAD3A4356D45b13783E57Bb9\",\n            \"0x806A90fbD8cAe816c870758ff9D7A74547265711\",\n            \"0x9BFB45eBA673BE3EC0a4f7C3f026af1164Fb9d74\",\n            \"0x1B2C142ae4B9c72d2B8957079563d171B7F72892\",\n            \"0x93BcBff59c6C440861404cb30c9C456315600667\",\n            \"0x53aB746A4D68e3d6287E9ABb56BB53c654DCfC34\",\n            \"0x0c2d567418Cf8Ed5A50681DaF159a3cb1cdF19B2\",\n            \"0xfaDD3b0DcfB0Ae4A0ee676fAb249Bfbb0560C78F\",\n            \"0xd5B107A4ACF1573A727111AAA000E1eCc933CE3f\",\n            \"0x1d56AbEFEC79e302808C9e392d846E8666152C1C\",\n            \"0xa01b50d22c5205fb8729bb783b7eb533a67d0253\",\n            \"0xec768d5a6C624A54b221fb1e6E85bd242c4EEB80\",\n            \"0x0c90D90f0d38c21ecB15d5Bd32B030977eeB2e31\",\n            \"0x7Fd611Af09BeFB5f47aBB19FCC25a22997aEb0b1\",\n            \"0x0364E892f048be3bfA9b32ff3565a1Ac01133296\",\n            \"0xb6136ACbe62E55b875b6D2d83bBc19A72C192B21\",\n            \"0xD6cE498dcf28D5f6A3fe10887B62B114bBf06DA9\",\n            \"0x38F22986E3416f0b1084393c28b92DA6E82B6986\",\n            \"0x05670cA6db3296c109a0CAE1d554520b215194Ee\",\n            \"0x68812F136Ad7f76817fEE39c3fF2848a5d5614aA\",\n            \"0xd217be00b92af01Aa3D6d9c3B63D1b4c5443503C\",\n            \"0x6B2f60F7292FE185E1E55149bE5a78c22cb7d7A9\",\n            \"0x5989B02C863857d7E42f3ae264F8A0faCD6baD61\",\n            \"0x4D59A872f019A57f82117eE3c07b2b9546338E09\",\n            \"0x4c31FC81609f39F8c54e227a0F54B9430AbA96BA\",\n            \"0x896C20Da40c2A4df9B7C98B16a8D5A95129161a5\",\n            \"0x75946d9F56C652e5DB8FFf158dFe3C54dd57Fb24\",\n            \"0x322Ebd2Aa9Df8f33cc2010AF5375aFCdDe54397e\",\n            \"0xda3Dc869B55035B61253Ef6ae3809709B8C374C9\",\n            \"0x69633cde8bAAfd4478B0D10d6480E3Ed2CEA588e\"\n        ];\n\n        const amounts = [];\n\n        for (let i = 0; i < wallets.length; i++) {\n            amounts.push(25);\n        }\n\n        distributeBatch(wallets, amounts);\n    }\n\n    const distributeBatchForInputFields = async ()=> {\n\n        let dests = [];\n        let amounts = [];\n\n\n        for (let i = 0; i < destinations.length; i++) {\n            dests.push(destinations[i].destination);\n            amounts.push(destinations[i].amount);\n        }\n\n        distributeBatch(dests, amount);\n    }\n\n    const distributeBatch = async (addrs, amounts)=> {        \n        try{\n            let tx = await contract.distributeBatch(props.connectedWalletInfo.account, addrs, amounts, []);\n            \n            props.onBoastMessage(\"distributing tokens en masse...\");\n            await tx.wait();\n            props.onBoastMessage(\"distributed tokens en masse!\");\n        } catch(e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    const distribute = async (from, to, amount)=> {\n        try{\n            let tx = await contract.distribute(from, to, amount, []);\n            \n            props.onBoastMessage(\"distributing tokens to \" + to + \"...\");\n            await tx.wait();\n            props.onBoastMessage(\"distributed tokens to \" + to + \"!\");\n        } catch(e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    const [toText, setToText] = useState('');\n    const [amount, setAmount] = useState('');\n\n    const handleOnToChanged = (event)=> {\n        setToText(event.target.value);\n    }\n\n    const handleAmountChanged = (event)=> {\n        setAmount(event.target.value);\n    }\n\n    return <CenteredCard className=\"distributing\" title=\"Distributing\"> \n        <p>Receiver</p>\n        <input type=\"text\" onChange={handleOnToChanged}/>\n        <p>Amount</p>\n        <input type=\"number\" onChange={handleAmountChanged}/>\n        <div><button onClick={()=> { distribute(props.connectedWalletInfo.account, toText, amount) }}>distribute</button></div>\n\n        <p>Batch Distributing</p>\n        {\n            destinations.map((input, index) => {\n                return (\n                    <div key={index}>\n                        <input\n                            name =\"receivers\"\n                            placeholder=\"receiver\"\n                            value={input.name}\n                            onChange= {event => handleReceiversChanged(index, event)}\n                        />\n                        <input\n                            name =\"amounts\"\n                            placeholder=\"amount\"\n                            value={input.name}\n                            onChange= {event => handleAmountsChanged(index, event)}\n                        />\n                    </div>\n                )\n            })\n        }\n\n        <div><button onClick={addDestination}>+</button></div>\n        <div><button onClick={distributeBatchForInputFields}>distribute batch</button></div>\n        {/* <div><button onClick={distributeBatchForSXSW}>distribute batch (SXSW)</button></div> */}\n    </CenteredCard>\n}\n\nexport default Distributing;","import \"./Minting.css\";\nimport { ethers } from \"ethers\"\nimport React, { useState } from 'react';\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\nconst Minting = (props)=> {\n    const [toText, setToText] = useState('');\n    const [amount, setAmount] = useState('');\n\n    const handleOnToChanged = (event)=> {\n        setToText(event.target.value);\n    }\n\n    const handleAmountChanged = (event)=> {\n        setAmount(event.target.value);\n    }\n \n    const address = repTokenAddress;\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n    const mint = async (to, amount)=> {\n        try{\n            let tx = await contract.mint(to, amount, []);\n            \n            props.onBoastMessage(\"minting tokens to \" + to + \"...\");\n            await tx.wait();\n            props.onBoastMessage(\"minted tokens to \" + to + \"!\");\n        } catch(e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    return <CenteredCard className=\"minting\" title=\"Minting\"> \n        <p>Distributor</p>\n        <input type=\"text\" onChange={handleOnToChanged}/>\n        <p>Amount</p>\n        <input type=\"number\" onChange={handleAmountChanged}/>\n        <div><button onClick={()=> { mint(toText, amount) }}>mint</button></div>\n    </CenteredCard>\n}\n\nexport default Minting;","import \"./Balance.css\";\nimport { ethers } from \"ethers\"\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport React, {useEffect, useState} from 'react';\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\n\nconst Balance = (props)=> {\n\n    useEffect(()=> {\n        getBalance();\n    }, []);\n\n    const [soulboundBalance, setSoulboundBalance] = useState(0);\n    const [redeemableBalance, setRedeemableBalance] = useState(0);\n\n    const [soulboundName, setSoulboundName] = useState('');\n    const [soulboundDescription, setSoulboundDescription] = useState('');\n    const [soulboundImage, setSoulboundImage] = useState('');\n\n    const [redeemableImage, setRedeemableImage] = useState('');\n    const [redeemableName, setRedeemableName] = useState('');\n    const [redeemableDescription, setRedeemableDescription] = useState('');\n\n    const [destinationWallet, setDestinationWallet] = useState('');\n\n    const [toText, setToText] = useState('');\n\n    const [isLoadingBalance, setIsLoadingBalance] = useState(false);\n\n    const handleOnToChanged = (event)=> {\n        setToText(event.target.value);\n    }\n\n    const address = repTokenAddress;\n\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n    const getBalance = async ()=> {\n\n        setIsLoadingBalance(true);\n\n        let balanceOf0 = await contract.balanceOf(props.connectedWalletInfo.account, 0);\n        let balanceOf1 = await contract.balanceOf(props.connectedWalletInfo.account, 1);\n\n        setSoulboundBalance(balanceOf0.toNumber());\n        setRedeemableBalance(balanceOf1.toNumber());\n\n        setIsLoadingBalance(false);\n\n        let soulboundURI = await contract.uri(0);\n        soulboundURI = soulboundURI.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n        let soulboundJson = await getJson(soulboundURI);\n\n        setSoulboundName(soulboundJson.name);\n        setSoulboundDescription(soulboundJson.description);\n        soulboundJson.image = soulboundJson.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n        setSoulboundImage(soulboundJson.image);\n\n        let redeemableURI = await contract.uri(1);\n        redeemableURI = redeemableURI.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n        let redeemableJson = await getJson(redeemableURI);\n\n        setRedeemableName(redeemableJson.name);\n        setRedeemableDescription(redeemableJson.description);\n        redeemableJson.image = redeemableJson.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n        setRedeemableImage(redeemableJson.image);\n\n        let destinationWallet = await contract.destinationWallets(props.connectedWalletInfo.account);\n        \n        if (\"0x0000000000000000000000000000000000000000\" === destinationWallet) {\n            setDestinationWallet(\"The Destination Wallet is the same as the currently connected wallet\");\n        }\n        else {\n            setDestinationWallet(destinationWallet);\n        }\n    }\n\n    const setUserDestination = async ()=> {\n        try{\n            let tx = await contract.setDestinationWallet(toText);\n            \n            props.onBoastMessage(\"setting destination wallet to \" + toText + \"...\");\n            await tx.wait();\n            props.onBoastMessage(\"set destination wallet to \" + toText + \"!\");\n        } catch(e) {\n            props.onBoastMessage(e.reason);\n        }\n\n        setDestinationWallet(toText);\n    }\n\n    const getJson = async(uri)=> {\n        try {\n            let response = await fetch(uri);\n            let responseJson = await response.json();\n            return responseJson;\n        } catch(error) {\n            console.error(error);\n        }\n    }\n\n\n\n    return <div className=\"balance\" title=\"Account\">\n        <h2>Account</h2>\n        <div className=\"token tray\">\n            <p>Balance</p>\n            <p>{soulboundBalance}</p>\n            <img src={soulboundImage}></img>\n            <p className=\"titleBox\">{soulboundName}</p>\n            <p className=\"descriptionBox\">{soulboundDescription}</p>\n        </div>\n        <div className=\"token tray\">\n            <p>Balance</p>\n            <p>{redeemableBalance}</p>\n            <img src={redeemableImage}></img>\n            <p className=\"titleBox\">{redeemableName}</p>\n            <p className=\"descriptionBox\">{redeemableDescription}</p>\n        </div>\n\n        <div>\n            <p>Current Destination Wallet</p>\n            <p>{destinationWallet}</p>\n\n            <p>New Destination Wallet</p>\n            <input type=\"text\" onChange={handleOnToChanged}/>\n            <div>\n            <button onClick={setUserDestination}>Set</button>\n            </div>\n        </div>\n    </div>\n}\n\nexport default Balance;","import \"./SXSW.css\";\nimport { ethers } from \"ethers\"\nimport React, { useState } from 'react';\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\nimport { oneOffAddress, OneOffDistributorABI } from \"../OneOffDistributorInfo\";\nimport { RelayProvider } from '@opengsn/provider'\n\nconst SXSW = (props)=> {\n\n    let tokenBurnAmount = 1;\n    let tokenClaimAmount = 40;\n\n    // const repTokensContract = new ethers.Contract(\n    //     repTokenAddress,\n    //     repTokensABI,\n    //     props.connectedWalletInfo.provider\n    // );\n\n    const claimBeersGasless = async (contractAddress, contractABI, paymasterAddress) => {\n        const gsnConfig = {\n            paymasterAddress: paymasterAddress,\n          }\n\n          console.log(contractAddress);\n          console.log(paymasterAddress);\n\n          const gsnProvider = RelayProvider.newProvider({ provider: window.ethereum, config: gsnConfig })\n          await gsnProvider.init()\n          const provider2 = new ethers.providers.Web3Provider(gsnProvider)\n          const signer = provider2.getSigner()\n          const aContract = new ethers.Contract(contractAddress, contractABI, signer);\n          props.onBoastMessage(\"Burning for beer...\");\n          let tx = await aContract.safeTransferFrom(props.connectedWalletInfo.account, \"0x38456fae75e2be6b071541942dd9c8750fF9Ebb2\", 1, tokenBurnAmount, []);\n          await tx.wait();\n          props.onBoastMessage(\"Burned for beer!\");\n    }\n\n    const distributeOneOffTokensGasless = async (contractAddress, contractABI, paymasterAddress)=> {\n\n        console.log(contractAddress);\n        console.log(tokenClaimAmount);\n\n        const gsnConfig = {\n            paymasterAddress: paymasterAddress,\n          }\n\n        const gsnProvider = RelayProvider.newProvider({ provider: window.ethereum, config: gsnConfig })\n        await gsnProvider.init()\n        const provider2 = new ethers.providers.Web3Provider(gsnProvider)\n        const signer = provider2.getSigner()\n        const aContract = new ethers.Contract(contractAddress, contractABI, signer);\n        try {\n            props.onBoastMessage(\"Claiming Tokens...\");\n            let tx = await aContract.redeem(tokenClaimAmount);\n            await tx.wait();\n            props.onBoastMessage(\"Claimed Tokens!\");\n        } catch (e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    const distribute = async ()=> {\n        await distributeOneOffTokensGasless(oneOffAddress, OneOffDistributorABI, '0xba8021c8c6219eaac87883e062fB456f537089C5');\n    }\n\n    const claimbeer = async ()=> {\n        await claimBeersGasless(repTokenAddress, repTokensABI, '0xBA7D9bE288c3A36cC0d21ae1Ce2b341717994dc8');\n    }\n\n    return <CenteredCard className=\"minting\" title=\"Consensys\"> \n    <div>\n        <p>Thank you for attending the ATX DAO's social mixer! Please click the button below to claim your Rep Tokens!</p>\n        <button onClick={distribute}>Claim {tokenClaimAmount} Token(s) </button>\n    </div>\n    <div>\n    <p>Thirsty? Redeem { tokenBurnAmount } token(s) and find Jacob Homanics to receive a free beer!</p>\n    <button onClick={claimbeer}>Burn {tokenBurnAmount} Redeemable Token(s) </button>\n\n    </div>\n    </CenteredCard>\n}\n\nexport default SXSW;","import { ethers } from \"ethers\"\nimport React, { useState, useEffect } from 'react';\nimport \"./RolesReader.css\";\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\n\nconst RolesReader = (props)=> {\n\n    useEffect(()=> {\n        getRoles();\n    }, []);\n\n    const [toText, setToText] = useState('');\n    const [selectedRole, setSelectedRole] = useState('distributor');\n\n    const handleOnSelectedRole = (event) => {\n        setSelectedRole(event.target.value);\n    }\n\n    \n    const handleOnToChanged = async (event)=> {\n        setToText(event.target.value);\n\n        console.log(await contract.MINTER_ROLE())\n    }\n\n    \n    const address = repTokenAddress;\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n\n    const [finalString, setFinalString] = useState('');\n\n    const getRoles = async (roleInBytes)=> {\n\n        let ADMIN_ROLE = await contract.DEFAULT_ADMIN_ROLE();\n\n        let MINTER_ROLE = await contract.MINTER_ROLE();\n        console.log(\"end\");\n\n        let DISTRIBUTOR_ROLE = await contract.DISTRIBUTOR_ROLE();\n        let BURNER_ROLE = await contract.BURNER_ROLE();\n\n        let hasMinterRole = await contract.hasRole(MINTER_ROLE, props.connectedWalletInfo.account);\n        let hasDistributorRole = await contract.hasRole(DISTRIBUTOR_ROLE, props.connectedWalletInfo.account);\n        let hasBurnerRole = await contract.hasRole(BURNER_ROLE, props.connectedWalletInfo.account);\n        let hasAdminRole = await contract.hasRole(ADMIN_ROLE, props.connectedWalletInfo.account);\n\n        let currentRoles = [];\n\n        if (hasAdminRole) {\n            currentRoles.push(\"Admin\");\n        }\n\n        if (hasMinterRole) {\n            currentRoles.push(\"Minter\");\n        }\n\n        if (hasDistributorRole) {\n            currentRoles.push(\"Distributor\");\n        }\n\n        if (hasBurnerRole) {\n            currentRoles.push(\"Burner\");\n        }\n\n        let finalString = '';\n        for (let i = 0; i < currentRoles.length; i++) {\n            if (i === currentRoles.length - 1) {\n                finalString += currentRoles[i];\n            } else {\n                finalString += currentRoles[i] + \", \";\n            }\n        }\n\n        setFinalString(finalString);\n    }\n\n\n    let output;\n    if (finalString.length > 0) {\n        output = <CenteredCard className=\"rolesReader\" title=\"Your Roles\">\n        <p>{finalString}</p>\n        </CenteredCard>\n    } else {\n        <div></div>\n    }\n\n    return <div>\n{output }\n    </div>\n}\n\nexport default RolesReader;","import \"./LoggedInSection.css\";\nimport GrantRoles from \"../GrantRoles/GrantRoles\";\nimport GeneralContractInfo from \"../GeneralContractInfo/GeneralContractInfo\";\nimport NavBar from \"../NavBar/NavBar\";\nimport React, { useState } from 'react';\nimport Distributing from \"../Distributing/Distributing\";\nimport Minting from \"../Minting/Minting\";\nimport Balance from \"../Balance/Balance\";\nimport SXSW from \"../SXSW/SXSW\";\nimport RolesReader from \"../Role Readers/RolesReader\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\nimport { ethers } from \"ethers\"\n\nconst LoggedInSection = (props)=> {\n\n    const address = repTokenAddress;\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n    const handleLogger = (message)=> {\n        props.onBoastMessage(message);\n    }   \n\n    const [contractInfoTrigger, setContractInfoTrigger] = useState(0);\n\n\n\n    const [output, setOutput] = useState(<Balance onBoastMessage={handleLogger} connectedWalletInfo={props.connectedWalletInfo}></Balance>);\n\n    const handleStateSet = (state)=> {\n\n        if (state === 'mint') {\n            setOutput(<Minting onBoastMessage={handleLogger} connectedWalletInfo={props.connectedWalletInfo}></Minting>);\n\n        } else if (state === 'distribute') {\n            setOutput(<Distributing onBoastMessage={handleLogger} connectedWalletInfo={props.connectedWalletInfo}></Distributing>);\n      \n        } else if (state === 'roleGrant') {\n            setOutput(<GrantRoles onBoastMessage={handleLogger} connectedWalletInfo={props.connectedWalletInfo}></GrantRoles>);\n        } else if (state === 'contractInfo') {\n            setContractInfoTrigger((contractInfoTrigger) => {\n                contractInfoTrigger = contractInfoTrigger + 1;\n                setOutput(<GeneralContractInfo onBoastMessage={handleLogger} onContractPageSet={contractInfoTrigger} connectedWalletInfo={props.connectedWalletInfo}></GeneralContractInfo>);\n            });\n        } else if (state === 'balance') {\n            setOutput(<Balance onBoastMessage={handleLogger} connectedWalletInfo={props.connectedWalletInfo}></Balance>);\n        } else if (state === 'SXSW') {\n            setOutput(<SXSW onBoastMessage={handleLogger} connectedWalletInfo={props.connectedWalletInfo}></SXSW>);\n        }\n    }\n\n    return <div className=\"LoggedInSection\">\n        <RolesReader connectedWalletInfo={props.connectedWalletInfo}></RolesReader>\n    <NavBar contract={contract} connectedWalletInfo={props.connectedWalletInfo} onStateSet={handleStateSet}></NavBar>\n    { output }\n    </div>\n}\n\nexport default LoggedInSection;","import React, { useState } from 'react';\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\nimport { ethers } from \"ethers\"\nimport \"./Lost.css\";\n\nconst Lost = (props)=> {\n    return <div className=\"lost\">\n            <div>Lost? Please follow this tutorial to install Metamask: </div>\n            <a href=\"https://www.geeksforgeeks.org/how-to-install-and-use-metamask-on-google-chrome/\" target={\"#\"}>Tutorial</a>\n        </div>\n}\n\nexport default Lost;","import React, { useState } from 'react';\nimport Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\nimport { ethers } from \"ethers\"\nimport \"./AddNetwork.css\";\n\nconst AddNetwork = (props)=> {\n\n    const handleClick = ()=> {\n      window.ethereum.request({\n        method: \"wallet_addEthereumChain\",\n        params: [{\n          chainId: \"0x89\",\n          rpcUrls: [\"https://polygon.llamarpc.com\"],\n          chainName: \"Polygon Mainnet\",\n          nativeCurrency: {\n            name: \"MATIC\",\n            symbol: \"MATIC\",\n            decimals: 18\n          },\n          blockExplorerUrls: [\"https://polygonscan.com/\"]\n        }]\n      });\n    }\n\n    return <div className=\"addNetwork\">\n            <div>\n                <div>Please ensure that your MetaMask is connected to Polygon!</div>\n                <button onClick={handleClick}>Add Polygon To MetaMask</button>\n            </div>\n        </div>\n}\n\nexport default AddNetwork;","import \"./App.css\";\nimport React, { useState, useEffect } from 'react';\nimport \"./Components/Buttons/buttons.css\";\nimport ConnectWallet from \"./Components/ConnectWallet/ConnectWallet\";\nimport Logger from \"./Components/Logger/Logger\";\nimport LoggedInSection from \"./Components/LoggedInSection/LoggedInSection\";\nimport Lost from \"./Components/Lost/Lost\";\nimport AddNetwork from \"./Components/AddNetwork/AddNetwork\";\n\nfunction App() {\n\n  useEffect(() => {\n    document.title = \"Rep - ATX DAO\"\n    }, []);\n\n\n  const [connectedWalletInfo, setConnectedWalletInfo] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleLogin = (info)=> {\n    setConnectedWalletInfo(info);\n\n    setLoginComponents(\n      info.provider === undefined ?\n        <div></div> : \n        <LoggedInSection onBoastMessage={handleLogger} connectedWalletInfo={info}></LoggedInSection>\n        );\n  }\n\n  const handleLogger = (message)=> {\n    setMessage(message);\n  }\n\n  const [loginComponents, setLoginComponents] = useState('');\n\n  let extra;\n  if (connectedWalletInfo === undefined) {\n    extra = <Lost></Lost>;\n  }\n\n  let output = <div>\n  <div id=\"margined\">\n    <ConnectWallet onWalletConnected={handleLogin}></ConnectWallet>\n  </div>\n  <div id=\"margined\">\n    {extra}\n  </div>\n  <div id=\"margined\">\n    <AddNetwork></AddNetwork>\n  </div>\n  {loginComponents}\n</div>\n\n\n  // let output = <div>\n  // <ConnectWallet onBoastMessage={handleLogger} onWalletConnected={handleLogin}></ConnectWallet>\n  // <Logger boastMessage={message} connectedWalletInfo={connectedWalletInfo}></Logger>\n  // {loginComponents}</div>;\n\n  return (\n    <div className=\"app\">\n      <header>\n        {output}\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const oneOffAddress = \"0xd03Dd10961B8b32f5Fd8812aB994E5f93375A8c8\";\nconst { abi } = require(\"../OneOffDistributorABI.js\");\n\nmodule.exports = { oneOffAddress, OneOffDistributorABI: abi };  ","const repTokenAddress = \"0x57AA5fd0914A46b8A426cC33DB842D1BB1aeADa2\";\nconst { abi } = require(\"../RepTokensABI.js\");\n\nmodule.exports = { repTokenAddress, repTokensABI: abi };","const abi = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"admins\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_maxMintAmountPerTx\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"OperatorNotAllowed\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"BurnedRedeemable\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"coreAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"destination\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"DestinationWalletSet\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Distributed\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"lifetimeBalance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"redeemableBalance\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"OwnershipOfTokensMigrated\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"previousOwner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Paused\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"previousAdminRole\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"newAdminRole\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"name\": \"RoleAdminChanged\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"RoleGranted\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"RoleRevoked\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"values\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"TransferBatch\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"TransferSingle\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"value\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"URI\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Unpaused\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"BURNER_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"DEFAULT_ADMIN_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"DISTRIBUTOR_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"MINTER_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"OPERATOR_FILTER_REGISTRY\",\n    \"outputs\": [\n      {\n        \"internalType\": \"contract IOperatorFilterRegistry\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"TOKEN_MIGRATOR_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"accounts\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"balanceOfBatch\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"destinationWallets\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"distribute\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"to\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"amount\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"distributeBatch\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenID\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getOwnersOfTokenID\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"\",\n        \"type\": \"address[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenID\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getOwnersOfTokenIDLength\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"name\": \"getRoleAdmin\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getTrustedForwarder\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"forwarder\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"grantRole\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"hasRole\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"forwarder\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isTrustedForwarder\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"maxMintAmountPerTx\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"migrateOwnershipOfTokens\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"to\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"amount\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"mintBatch\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"paused\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"renounceOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"renounceRole\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"revokeRole\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"amounts\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeBatchTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"destination\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"setDestinationWallet\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"setMaxMintAmount\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"forwarder\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"setTrustedForwarder\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"togglePause\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_tokenid\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"uri\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"pure\",\n    \"type\": \"function\"\n  }\n];\n\nmodule.exports = { abi };","const abi = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"repToken\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"forwarder\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getTrustedForwarder\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"forwarder\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"forwarder\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isTrustedForwarder\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"onERC1155BatchReceived\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"onERC1155Received\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];\n\n  module.exports = { abi };"],"sourceRoot":""}