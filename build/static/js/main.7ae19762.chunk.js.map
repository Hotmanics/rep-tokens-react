{"version":3,"sources":["Components/ConnectWallet/ConnectWallet.js","Components/Cards/Centered Card/CenteredCard.js","Components/Logger/Logger.js","Components/GrantRoles/GrantRoles.js","Components/GeneralContractInfo/GeneralContractInfo.js","Components/NavBar/NavBar.js","Components/Distributing/Distributing.js","Components/Minting/Minting.js","Components/Balance/Balance.js","Components/SXSW/SXSW.js","Components/Role Readers/RolesReader.js","Components/LoggedInSection/LoggedInSection.js","App.js","reportWebVitals.js","index.js","Components/RepTokenInfo.js","RepTokensABI.js","Components/OneOffDistributorInfo.js","OneOffDistributorABI.js"],"names":["providerOptions","walletconnect","package","WalletConnectProvider","options","infuraId","coinbasewallet","CoinbaseWalletSDK","appName","rpc","chainId","darkMode","binancechainwallet","web3Modal","Web3Modal","network","cacheProvider","displayNoInjectedProvider","disableInjectedProvider","ConnectWallet","props","useState","connectedWalletInfo","setConnectedWalletInfo","connectWallet","clearCachedProvider","connect","provider","etherProvider","ethers","providers","Web3Provider","send","listAccounts","accounts","account","getSigner","onWalletConnected","boastMessage","reason","buttonSection","undefined","type","onClick","accountInfo","className","CenteredCard","classes","title","children","Logger","msg","GrantRoles","toText","setToText","selectedRole","setSelectedRole","handleOnToChanged","event","target","value","console","contract","MINTER_ROLE","log","address","repTokenAddress","Contract","repTokensABI","grantRole","roleInBytes","tx","onBoastMessage","wait","grantTheRole","grantMinterRole","grantDistributorRole","grantBurnerRole","grantSoulboundTokenTransfererRole","BURNER_ROLE","DISTRIBUTOR_ROLE","TOKEN_MIGRATOR_ROLE","maxMint","setMaxMint","setMax","setMaxMintAmount","onChange","id","GeneralContractInfo","useEffect","getAllHolders","getMaxMintAmountPerTx","onContractPageSet","test","maxMintAmount","assets","setAssets","maxMintAmountPerTx","x","toNumber","soulboundAssets","getOwnersOfTokenID","soulboundOwners","j","length","balanceOf","amount","push","owner","method","redeemableAssets","redeemableOwners","lifetime","map","data","index","Math","random","redeemable","NavBar","setState","handleClick","_state","onStateSet","Distributing","destination","destinations","setDestinations","distributeBatchForSXSW","wallets","amounts","i","distributeBatch","distributeBatchForInputFields","dests","addrs","distribute","from","to","setAmount","input","name","placeholder","handleReceiversChanged","handleAmountsChanged","Minting","mint","Balance","getBalance","soulboundBalance","setSoulboundBalance","redeemableBalance","setRedeemableBalance","soulboundName","setSoulboundName","soulboundDescription","setSoulboundDescription","soulboundImage","setSoulboundImage","redeemableImage","setRedeemableImage","redeemableName","setRedeemableName","redeemableDescription","setRedeemableDescription","destinationWallet","setDestinationWallet","setIsLoadingBalance","balanceOf0","balanceOf1","uri","soulboundURI","replace","getJson","soulboundJson","description","image","redeemableURI","redeemableJson","destinationWallets","setUserDestination","fetch","response","json","responseJson","error","src","SXSW","handleClaimClick","gsnConfig","paymasterAddress","window","ethereum","gsnProvider","RelayProvider","newProvider","config","init","provider2","signer","aContract","safeTransferFrom","RolesReader","getRoles","finalString","setFinalString","DEFAULT_ADMIN_ROLE","ADMIN_ROLE","hasRole","hasMinterRole","hasDistributorRole","hasBurnerRole","hasAdminRole","currentRoles","LoggedInSection","handleLogger","message","setContractInfoTrigger","output","setOutput","state","contractInfoTrigger","App","document","setMessage","loginComponents","setLoginComponents","info","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","abi","require","module","exports","oneOffAddress","OneOffDistributorABI"],"mappings":"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","file":"static/js/main.7ae19762.chunk.js","sourcesContent":["import Web3Modal from \"web3modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport CoinbaseWalletSDK from \"@coinbase/wallet-sdk\";\nimport { ethers } from \"ethers\"\nimport React, { useState } from 'react';\nimport \"./ConnectWallet.css\";\n\nconst providerOptions = {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        infuraId: \"https://mainnet.infura.io/v3/cadcede23805433d8a998682be5bc221\", // required\n      },\n    },\n    coinbasewallet: {\n      package: CoinbaseWalletSDK, // Required\n      options: {\n        appName: \"web3modal\", // Required\n        infuraId: \"https://mainnet.infura.io/v3/cadcede23805433d8a998682be5bc221\", // Required\n        rpc: \"\", // Optional if `infuraId` is provided; otherwise it's required\n        chainId: 1, // Optional. It defaults to 1 if not provided\n        darkMode: false, // Optional. Use dark theme, defaults to false\n      },\n    },\n    binancechainwallet: {\n      package: true,\n    },\n  };\n  \n  const web3Modal = new Web3Modal({\n    network: \"mainnet\", // optional\n    cacheProvider: false, // optional\n    displayNoInjectedProvider: false,\n    disableInjectedProvider: false,\n    providerOptions, // required\n  });\n\nconst ConnectWallet = (props)=> {\n\n    const [connectedWalletInfo, setConnectedWalletInfo] = useState('');\n\n    const connectWallet = async () => {\n        //keep for dev purposes - if not present then app will remember Metamask and not display the modal\n        web3Modal.clearCachedProvider()\n    \n        try{\n\n            const provider = await web3Modal.connect();\n            const etherProvider = new ethers.providers.Web3Provider(provider);\n        \n            await etherProvider.send(\"eth_requestAccounts\");\n            const accounts = await etherProvider.listAccounts();\n          \n            const connectedWalletInfo = {\n              account: accounts[0],\n              provider: etherProvider.getSigner(),\n          }\n  \n          props.onWalletConnected(connectedWalletInfo);\n          setConnectedWalletInfo(connectedWalletInfo);\n        } catch (e) {\n          props.boastMessage(e.reason);\n        }\n\n    };\n\n    let buttonSection = connectedWalletInfo.account === undefined ? \n                            <button type=\"button\" onClick={connectWallet}>\n                                Login\n                            </button> :\n                            <div></div>;\n\n    const accountInfo = connectedWalletInfo.account === undefined ? <p>Please login.</p>\n                        : <p>You are logged in as: { connectedWalletInfo.account }</p>\n    return <div className=\"connectWallet\">\n      <p>Please ensure that you are connected to polygon mainnet!</p>\n      <br/>\n        { buttonSection } \n        { accountInfo }\n        </div>\n}\n\nexport default ConnectWallet;","import \"./CenteredCard.css\";\n\nconst CenteredCard = (props)=> {\n    const classes = 'centeredCard ' + props.className;\n    return <div className={classes}><h2>{props.title}</h2>{props.children}</div>\n}\n\nexport default CenteredCard;","import React, { useState } from 'react';\nimport CenteredCard from '../Cards/Centered Card/CenteredCard';\nimport \"./Logger.css\";\n\nconst Logger = (props)=> {\n\n    let msg = props.boastMessage === '' ? \"\" : props.boastMessage;\n\n    return <CenteredCard className=\"logger\">\n        <p>{msg}</p>\n        </CenteredCard>\n}\n\nexport default Logger;","import { ethers } from \"ethers\"\nimport React, { useState } from 'react';\nimport \"./GrantRoles.css\";\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\nconst GrantRoles = (props)=> {\n\n    const [toText, setToText] = useState('');\n    const [selectedRole, setSelectedRole] = useState('distributor');\n\n    const handleOnSelectedRole = (event) => {\n        setSelectedRole(event.target.value);\n    }\n\n    const handleOnToChanged = async (event)=> {\n        setToText(event.target.value);\n\n        console.log(await contract.MINTER_ROLE())\n    }\n\n    const address = repTokenAddress;\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n    const grantRole = async (roleInBytes)=> {\n        try{\n            let tx = await contract.grantRole(roleInBytes, toText);\n            props.onBoastMessage(\"granting role \" + roleInBytes + \" to \" + toText + \"...\");\n            await tx.wait();\n            props.onBoastMessage(\"granted role \" + roleInBytes + \"!\");\n        } catch (e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    const grantTheRole = async ()=> {\n        console.log(selectedRole);\n\n        if (selectedRole === 'minter') {\n            console.log(\"beh\");\n            await grantMinterRole();\n        }\n        if (selectedRole === 'distributor')\n            await grantDistributorRole();\n        if (selectedRole === 'burner')\n            await grantBurnerRole();\n        if (selectedRole === 'Soulbound Token Transferer')\n            await grantSoulboundTokenTransfererRole();\n    }\n\n    const grantBurnerRole = async ()=> {\n        await grantRole(await contract.BURNER_ROLE());\n    }\n\n    const grantDistributorRole = async ()=> {\n        await grantRole(await contract.DISTRIBUTOR_ROLE());\n    }\n\n    const grantMinterRole = async ()=> {\n        await grantRole(await contract.MINTER_ROLE());\n    }\n\n    const grantSoulboundTokenTransfererRole = async ()=> {\n        await grantRole(await contract.TOKEN_MIGRATOR_ROLE());\n    }\n\n    const mint = async (to, amount)=> {\n        try{\n            let tx = await contract.mint(to, amount, []);\n            \n            props.onBoastMessage(\"minting tokens to \" + to + \"...\");\n            await tx.wait();\n            props.onBoastMessage(\"minted tokens to \" + to + \"!\");\n        } catch(e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    const [maxMint, setMaxMint] = useState(0);\n    const handleMaxMint = (event)=> {\n        setMaxMint(event.target.value);\n    }\n\n    const setMax = async ()=> {\n        try{\n            let tx = await contract.setMaxMintAmount(maxMint);\n            \n            props.onBoastMessage('setting max mint to ' + maxMint + \"...\");\n            await tx.wait();\n            props.onBoastMessage(`set max mint to ${maxMint}!`);\n        } catch(e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    return <CenteredCard className=\"grantMinterRole\" title=\"Grant Roles\">\n        <p>Recipient</p>\n        <input type=\"text\" onChange={handleOnToChanged}/>\n        <div id=\"aye\"><select onChange={handleOnSelectedRole} >  \n        <option> distributor </option>  \n            <option> minter </option>  \n            <option> burner </option>  \n            <option> admin </option>  \n            <option> token migrator </option>  \n        </select>  </div>\n\n        <button onClick={grantTheRole}>Grant Role</button>\n\n        <div>\n            <p>Max Mint Amount</p>\n            <input type=\"number\" onChange={handleMaxMint}/>\n            <div>\n                <button onClick={setMax}>Set Max</button>\n            </div> \n        </div>\n\n        </CenteredCard>\n}\n\nexport default GrantRoles;","// import \"./GeneralContractInfo.css\";\nimport { ethers } from \"ethers\"\nimport React, { useState, useEffect } from \"react\";\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\n\nconst GeneralContractInfo = (props)=> {\n\n\n    useEffect(()=> {\n        if (props.onContractPageSet) {\n            test();\n        }\n\n        async function test() {\n            await getAllHolders();  \n            await getMaxMintAmountPerTx();\n    \n        }\n    }, [props.onContractPageSet]);\n\n    const [maxMintAmount, setMaxMintAmount] = useState();\n    const [assets, setAssets] = useState({});\n\n    const address = repTokenAddress;\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n    const getMaxMintAmountPerTx = async ()=> {\n        try {\n            let x = await contract.maxMintAmountPerTx();\n            setMaxMintAmount(x.toNumber());\n            \n        } catch (e) {\n\n        }\n    }\n\n    const getAllHolders = async ()=> {\n\n        const soulboundAssets = [];\n\n        try {\n            let soulboundOwners = await contract.getOwnersOfTokenID(0);\n\n            \n            for (let j = 0; j < soulboundOwners.length; j++) {\n                let amount = await contract.balanceOf(soulboundOwners[j], 0); //Sometimes errors out here. Sometimes does not error out.\n                soulboundAssets.push({\n                    owner: soulboundOwners[j],\n                    amount: amount.toNumber()\n                })\n            }\n        } catch (e) {\n            if (e.method === \"balanceOf(address,uint256)\") {\n                console.log(\"errored on \" + e.method);\n            }\n        }\n\n        const redeemableAssets = [];\n        try {\n            let redeemableOwners = await contract.getOwnersOfTokenID(1);\n\n            for (let j = 0; j < redeemableOwners.length; j++) {\n                let amount = await contract.balanceOf(redeemableOwners[j], 1);\n                redeemableAssets.push({\n                    owner: redeemableOwners[j],\n                    amount: amount.toNumber()\n                })\n            }\n        } catch (e) {\n            if (e.method === \"balanceOf(address,uint256)\") {\n                console.log(\"errored on \" + e.method);\n            }\n        }\n        \n        const assets = {\n            soulboundAssets: soulboundAssets,\n            redeemableAssets: redeemableAssets\n        }\n\n\n        setAssets(assets);\n    }\n\n    let lifetime = <div><p>Loading Lifetime Token Owners...</p></div>;\n\n    if (assets.soulboundAssets !== undefined) {\n        lifetime = <div>\n            <h2>Lifetime Tokens</h2>\n            <p>Number Of Holders: {assets.soulboundAssets.length}</p>\n            {\n                assets.soulboundAssets.map((data, index) => (\n                    <p key={Math.random()}>{data.owner} owns {data.amount}</p>\n                ))\n            }\n        </div>\n    }\n\n    let redeemable = <div><p>Loading Redeemable Token Owners...</p></div>;\n    if (assets.redeemableAssets !== undefined) {\n        redeemable = <div>\n            <h2>Redeemable Tokens</h2>\n            <p>Number Of Holders: {assets.redeemableAssets.length}</p>\n            {\n                assets.redeemableAssets.map((data, index) => (\n                    <p key={Math.random()}>{data.owner} owns {data.amount}</p>\n                ))\n            }\n        </div>\n    }\n\n    let maxMint = <div><p>Loading Max Mint...</p></div>;\n\n    if (maxMintAmount !== undefined) {\n        maxMint = <div>\n            <p>Max Mint Amount Per Tx: {maxMintAmount}</p>\n        </div>\n    }\n\n    return <CenteredCard title=\"Contract Info\">\n        <p>Contract Address: { address }</p>\n        { maxMint }\n        <p>-------------------------------------------</p>\n        {\n            lifetime\n        }\n        <p>------</p>\n        {\n            redeemable\n        }\n\n        </CenteredCard>\n}\n\nexport default GeneralContractInfo;\n","import React, { useState } from 'react';\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\n\nconst NavBar = (props)=> {\n\n    const [state, setState] = useState('');\n\n    const handleClick = (_state)=> {\n        setState(_state);\n        props.onStateSet(_state);\n    }   \n\n    return <CenteredCard>\n        <button onClick={()=> {handleClick('contractInfo')}}>\n            Contract Info\n        </button>\n\n        <button onClick={()=> {handleClick('balance')}}>\n            Account\n        </button>\n\n        <button onClick={()=> {handleClick('mint')}}>\n            Minting\n        </button>\n\n        <button onClick={()=> {handleClick('distribute')}}>\n            Distributing\n        </button>\n\n        <button onClick={()=> {handleClick('roleGrant')}}>\n            Admin\n        </button>\n{/* \n        <button onClick={()=> {handleClick('SXSW')}}>\n            Burn For Beer - Consensys\n        </button> */}\n    </CenteredCard>\n}\n\nexport default NavBar;","import \"./Distributing.css\";\nimport { ethers } from \"ethers\"\nimport React, { useState } from 'react';\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\n\nconst Distributing = (props)=> {\n    const address = repTokenAddress;\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n    const [destinations, setDestinations] = useState([{destination: \"\", amount: \"\"}]);\n    const addDestination = () => {\n        let newField = {\n            destination: \"\",\n            amount: \"\"\n        }\n\n        setDestinations([...destinations, newField]);\n    }\n    \n    const handleReceiversChanged = (index, event)=> {\n        let data = [...destinations];\n        data[index].destination = event.target.value;\n        setDestinations(data);\n    }\n\n    const handleAmountsChanged = (index, event)=> {\n        let data = [...destinations];\n        data[index].amount = event.target.value;\n        setDestinations(data);\n    }\n\n    const distributeBatchForSXSW = async ()=> {\n        // const wallets = [\n        //     \"0xF5B590DaA789aB1a1D9AE2AF10eFf0aA28aA0Aa9\",\n        //     \"0xc0De39763a8997A62A01982BF41f99Fc5E8510a8\",\n        //     \"0x322Ebd2Aa9Df8f33cc2010AF5375aFCdDe54397e\",\n        //     \"0x80f5827d3e38c16b15772e6724192890059add8d\",\n        //     \"0x19dE2910006ea2f51Ba7387DF9fCcF0eb3F76d74\",\n        //     \"0xb36c4aA5cD17376d682F2ff2709316487E601aF2\",\n        //     \"0x51603C7059f369aB04B16AddFB7BB6c4e34b8523\",\n        //     \"0xf83b3A823653E8351b173Fa2Ae083Af37EAbCC01\",\n        //     \"0x10cfe05d0E024D707b1eae38aA17Da71E0ce0Fc0\",\n        //     \"0x7aEf0f86eFEAfeA60F8DaC562332B54a53235f6F\",\n        //     \"0x4a071fD98dD1f0B3C14999eCC07926166Dc544B4\",\n        //     \"0x67F882FEDBfF23A0AEC58aC8ecc52fA03db5D425\",\n        //     \"0xDd1444397d3c68C0CF55aAbdFa1Daf040200Bc46\",\n        //     \"0x448aB48379978aa1CAD3A4356D45b13783E57Bb9\",\n        //     \"0x806A90fbD8cAe816c870758ff9D7A74547265711\",\n        //     \"0x9BFB45eBA673BE3EC0a4f7C3f026af1164Fb9d74\",\n        //     \"0x1B2C142ae4B9c72d2B8957079563d171B7F72892\",\n        //     \"0x93BcBff59c6C440861404cb30c9C456315600667\",\n        //     \"0x53aB746A4D68e3d6287E9ABb56BB53c654DCfC34\",\n        //     \"0x0c2d567418Cf8Ed5A50681DaF159a3cb1cdF19B2\",\n        //     \"0xfaDD3b0DcfB0Ae4A0ee676fAb249Bfbb0560C78F\",\n        //     \"0xd5B107A4ACF1573A727111AAA000E1eCc933CE3f\",\n        //     \"0x1d56AbEFEC79e302808C9e392d846E8666152C1C\",\n        //     \"0xa01b50d22c5205fb8729bb783b7eb533a67d0253\",\n        //     \"0xec768d5a6C624A54b221fb1e6E85bd242c4EEB80\",\n        //     \"0x0c90D90f0d38c21ecB15d5Bd32B030977eeB2e31\",\n        //     \"0x7Fd611Af09BeFB5f47aBB19FCC25a22997aEb0b1\",\n        //     \"0x0364E892f048be3bfA9b32ff3565a1Ac01133296\",\n        //     \"0xb6136ACbe62E55b875b6D2d83bBc19A72C192B21\",\n        //     \"0xD6cE498dcf28D5f6A3fe10887B62B114bBf06DA9\",\n        //     \"0x38F22986E3416f0b1084393c28b92DA6E82B6986\",\n        //     \"0x05670cA6db3296c109a0CAE1d554520b215194Ee\",\n        //     \"0x68812F136Ad7f76817fEE39c3fF2848a5d5614aA\",\n        //     \"0xd217be00b92af01Aa3D6d9c3B63D1b4c5443503C\",\n        //     \"0x6B2f60F7292FE185E1E55149bE5a78c22cb7d7A9\",\n        //     \"0x5989B02C863857d7E42f3ae264F8A0faCD6baD61\",\n        //     \"0x4D59A872f019A57f82117eE3c07b2b9546338E09\",\n        //     \"0x4c31FC81609f39F8c54e227a0F54B9430AbA96BA\",\n        //     \"0x896C20Da40c2A4df9B7C98B16a8D5A95129161a5\",\n        //     \"0x75946d9F56C652e5DB8FFf158dFe3C54dd57Fb24\",\n        //     \"0x322Ebd2Aa9Df8f33cc2010AF5375aFCdDe54397e\",\n        //     \"0xda3Dc869B55035B61253Ef6ae3809709B8C374C9\",\n        //     \"0x69633cde8bAAfd4478B0D10d6480E3Ed2CEA588e\"\n        // ];\n\n        const wallets = [\n            \"0xF5B590DaA789aB1a1D9AE2AF10eFf0aA28aA0Aa9\",\n            \"0xc0De39763a8997A62A01982BF41f99Fc5E8510a8\",\n            \"0x322Ebd2Aa9Df8f33cc2010AF5375aFCdDe54397e\",\n            \"0x80f5827d3e38c16b15772e6724192890059add8d\",\n            \"0x19dE2910006ea2f51Ba7387DF9fCcF0eb3F76d74\",\n            \"0xb36c4aA5cD17376d682F2ff2709316487E601aF2\",\n            \"0x51603C7059f369aB04B16AddFB7BB6c4e34b8523\",\n            \"0xf83b3A823653E8351b173Fa2Ae083Af37EAbCC01\",\n            \"0x10cfe05d0E024D707b1eae38aA17Da71E0ce0Fc0\",\n            \"0x7aEf0f86eFEAfeA60F8DaC562332B54a53235f6F\",\n            \"0x4a071fD98dD1f0B3C14999eCC07926166Dc544B4\",\n            \"0x67F882FEDBfF23A0AEC58aC8ecc52fA03db5D425\",\n            \"0xDd1444397d3c68C0CF55aAbdFa1Daf040200Bc46\",\n            \"0x448aB48379978aa1CAD3A4356D45b13783E57Bb9\",\n            \"0x806A90fbD8cAe816c870758ff9D7A74547265711\",\n            \"0x9BFB45eBA673BE3EC0a4f7C3f026af1164Fb9d74\",\n            \"0x1B2C142ae4B9c72d2B8957079563d171B7F72892\",\n            \"0x93BcBff59c6C440861404cb30c9C456315600667\",\n            \"0x53aB746A4D68e3d6287E9ABb56BB53c654DCfC34\",\n            \"0x0c2d567418Cf8Ed5A50681DaF159a3cb1cdF19B2\",\n            \"0xfaDD3b0DcfB0Ae4A0ee676fAb249Bfbb0560C78F\",\n            \"0xd5B107A4ACF1573A727111AAA000E1eCc933CE3f\",\n            \"0x1d56AbEFEC79e302808C9e392d846E8666152C1C\",\n            \"0xa01b50d22c5205fb8729bb783b7eb533a67d0253\",\n            \"0xec768d5a6C624A54b221fb1e6E85bd242c4EEB80\",\n            \"0x0c90D90f0d38c21ecB15d5Bd32B030977eeB2e31\",\n            \"0x7Fd611Af09BeFB5f47aBB19FCC25a22997aEb0b1\",\n            \"0x0364E892f048be3bfA9b32ff3565a1Ac01133296\",\n            \"0xb6136ACbe62E55b875b6D2d83bBc19A72C192B21\",\n            \"0xD6cE498dcf28D5f6A3fe10887B62B114bBf06DA9\",\n            \"0x38F22986E3416f0b1084393c28b92DA6E82B6986\",\n            \"0x05670cA6db3296c109a0CAE1d554520b215194Ee\",\n            \"0x68812F136Ad7f76817fEE39c3fF2848a5d5614aA\",\n            \"0xd217be00b92af01Aa3D6d9c3B63D1b4c5443503C\",\n            \"0x6B2f60F7292FE185E1E55149bE5a78c22cb7d7A9\",\n            \"0x5989B02C863857d7E42f3ae264F8A0faCD6baD61\",\n            \"0x4D59A872f019A57f82117eE3c07b2b9546338E09\",\n            \"0x4c31FC81609f39F8c54e227a0F54B9430AbA96BA\",\n            \"0x896C20Da40c2A4df9B7C98B16a8D5A95129161a5\",\n            \"0x75946d9F56C652e5DB8FFf158dFe3C54dd57Fb24\",\n            \"0x322Ebd2Aa9Df8f33cc2010AF5375aFCdDe54397e\",\n            \"0xda3Dc869B55035B61253Ef6ae3809709B8C374C9\",\n            \"0x69633cde8bAAfd4478B0D10d6480E3Ed2CEA588e\"\n        ];\n\n        const amounts = [];\n\n        for (let i = 0; i < wallets.length; i++) {\n            amounts.push(25);\n        }\n\n        distributeBatch(wallets, amounts);\n    }\n\n    const distributeBatchForInputFields = async ()=> {\n\n        let dests = [];\n        let amounts = [];\n\n\n        for (let i = 0; i < destinations.length; i++) {\n            dests.push(destinations[i].destination);\n            amounts.push(destinations[i].amount);\n        }\n\n        distributeBatch(dests, amount);\n    }\n\n    const distributeBatch = async (addrs, amounts)=> {\n        try{\n            let tx = await contract.distributeBatch(props.connectedWalletInfo.account, addrs, amounts, []);\n            \n            props.onBoastMessage(\"distributing tokens en masse...\");\n            await tx.wait();\n            props.onBoastMessage(\"distributed tokens en masse!\");\n        } catch(e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    const distribute = async (from, to, amount)=> {\n        try{\n            let tx = await contract.distribute(from, to, amount, []);\n            \n            props.onBoastMessage(\"distributing tokens to \" + to + \"...\");\n            await tx.wait();\n            props.onBoastMessage(\"distributed tokens to \" + to + \"!\");\n        } catch(e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    const [toText, setToText] = useState('');\n    const [amount, setAmount] = useState('');\n\n    const handleOnToChanged = (event)=> {\n        setToText(event.target.value);\n    }\n\n    const handleAmountChanged = (event)=> {\n        setAmount(event.target.value);\n    }\n\n    return <CenteredCard className=\"distributing\" title=\"Distributing\"> \n        <p>Receiver</p>\n        <input type=\"text\" onChange={handleOnToChanged}/>\n        <p>Amount</p>\n        <input type=\"number\" onChange={handleAmountChanged}/>\n        <div><button onClick={()=> { distribute(props.connectedWalletInfo.account, toText, amount) }}>distribute</button></div>\n\n        <p>Batch Distributing</p>\n        {\n            destinations.map((input, index) => {\n                return (\n                    <div key={index}>\n                        <input\n                            name =\"receivers\"\n                            placeholder=\"receiver\"\n                            value={input.name}\n                            onChange= {event => handleReceiversChanged(index, event)}\n                        />\n                        <input\n                            name =\"amounts\"\n                            placeholder=\"amount\"\n                            value={input.name}\n                            onChange= {event => handleAmountsChanged(index, event)}\n                        />\n                    </div>\n                )\n            })\n        }\n        <div><button onClick={addDestination}>+</button></div>\n        <div><button onClick={distributeBatchForInputFields}>distribute batch</button></div>\n        <div><button onClick={distributeBatchForSXSW}>distribute batch (SXSW)</button></div>\n    </CenteredCard>\n}\n\nexport default Distributing;","import \"./Minting.css\";\nimport { ethers } from \"ethers\"\nimport React, { useState } from 'react';\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\nconst Minting = (props)=> {\n    const [toText, setToText] = useState('');\n    const [amount, setAmount] = useState('');\n\n    const handleOnToChanged = (event)=> {\n        setToText(event.target.value);\n    }\n\n    const handleAmountChanged = (event)=> {\n        setAmount(event.target.value);\n    }\n \n    const address = repTokenAddress;\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n    const mint = async (to, amount)=> {\n        try{\n            let tx = await contract.mint(to, amount, []);\n            \n            props.onBoastMessage(\"minting tokens to \" + to + \"...\");\n            await tx.wait();\n            props.onBoastMessage(\"minted tokens to \" + to + \"!\");\n        } catch(e) {\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    return <CenteredCard className=\"minting\" title=\"Minting\"> \n        <p>Distributor</p>\n        <input type=\"text\" onChange={handleOnToChanged}/>\n        <p>Amount</p>\n        <input type=\"number\" onChange={handleAmountChanged}/>\n        <div><button onClick={()=> { mint(toText, amount) }}>mint</button></div>\n    </CenteredCard>\n}\n\nexport default Minting;","import \"./Balance.css\";\nimport { ethers } from \"ethers\"\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport React, {useEffect, useState} from 'react';\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\n\nconst Balance = (props)=> {\n\n    useEffect(()=> {\n        getBalance();\n    }, []);\n\n    const [soulboundBalance, setSoulboundBalance] = useState(0);\n    const [redeemableBalance, setRedeemableBalance] = useState(0);\n\n    const [soulboundName, setSoulboundName] = useState('');\n    const [soulboundDescription, setSoulboundDescription] = useState('');\n    const [soulboundImage, setSoulboundImage] = useState('');\n\n    const [redeemableImage, setRedeemableImage] = useState('');\n    const [redeemableName, setRedeemableName] = useState('');\n    const [redeemableDescription, setRedeemableDescription] = useState('');\n\n    const [destinationWallet, setDestinationWallet] = useState('');\n\n    const [toText, setToText] = useState('');\n\n    const [isLoadingBalance, setIsLoadingBalance] = useState(false);\n\n    const handleOnToChanged = (event)=> {\n        setToText(event.target.value);\n    }\n\n    const address = repTokenAddress;\n\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n    const getBalance = async ()=> {\n\n        setIsLoadingBalance(true);\n\n        let balanceOf0 = await contract.balanceOf(props.connectedWalletInfo.account, 0);\n        let balanceOf1 = await contract.balanceOf(props.connectedWalletInfo.account, 1);\n\n        setSoulboundBalance(balanceOf0.toNumber());\n        setRedeemableBalance(balanceOf1.toNumber());\n\n        setIsLoadingBalance(false);\n\n        let soulboundURI = await contract.uri(0);\n        soulboundURI = soulboundURI.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n        let soulboundJson = await getJson(soulboundURI);\n\n        setSoulboundName(soulboundJson.name);\n        setSoulboundDescription(soulboundJson.description);\n        soulboundJson.image = soulboundJson.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n        setSoulboundImage(soulboundJson.image);\n\n        let redeemableURI = await contract.uri(1);\n        redeemableURI = redeemableURI.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n        let redeemableJson = await getJson(redeemableURI);\n\n        setRedeemableName(redeemableJson.name);\n        setRedeemableDescription(redeemableJson.description);\n        redeemableJson.image = redeemableJson.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n        setRedeemableImage(redeemableJson.image);\n\n        let destinationWallet = await contract.destinationWallets(props.connectedWalletInfo.account);\n        \n        if (\"0x0000000000000000000000000000000000000000\" === destinationWallet) {\n            setDestinationWallet(\"The Destination Wallet is the same as the currently connected wallet\");\n        }\n        else {\n            setDestinationWallet(destinationWallet);\n        }\n    }\n\n    const setUserDestination = async ()=> {\n        try{\n            let tx = await contract.setDestinationWallet(toText);\n            \n            props.onBoastMessage(\"setting destination wallet to \" + toText + \"...\");\n            await tx.wait();\n            props.onBoastMessage(\"set destination wallet to \" + toText + \"!\");\n        } catch(e) {\n            props.onBoastMessage(e.reason);\n        }\n\n        setDestinationWallet(toText);\n    }\n\n    const getJson = async(uri)=> {\n        try {\n            let response = await fetch(uri);\n            let responseJson = await response.json();\n            return responseJson;\n        } catch(error) {\n            console.error(error);\n        }\n    }\n\n\n\n    return <CenteredCard className=\"Balance\" title=\"Account\">\n        <div className=\"token tray\">\n            <p>{soulboundBalance}</p>\n            <img src={soulboundImage}></img>\n            <p className=\"titleBox\">{soulboundName}</p>\n            <p className=\"descriptionBox\">{soulboundDescription}</p>\n        </div>\n        <div className=\"token tray\">\n            \n            <p>{redeemableBalance}</p>\n            <img src={redeemableImage}></img>\n            <p className=\"titleBox\">{redeemableName}</p>\n            <p className=\"descriptionBox\">{redeemableDescription}</p>\n        </div>\n\n        <div>\n            <p>Current Destination Wallet</p>\n            <p>{destinationWallet}</p>\n\n            <p>New Destination Wallet</p>\n            <input type=\"text\" onChange={handleOnToChanged}/>\n            <div>\n            <button onClick={setUserDestination}>Set</button>\n            </div>\n        </div>\n    </CenteredCard>\n}\n\nexport default Balance;","import \"./SXSW.css\";\nimport { ethers } from \"ethers\"\nimport React, { useState } from 'react';\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\nimport { oneOffAddress, OneOffDistributorABI } from \"../OneOffDistributorInfo\";\nimport { GSNConfig, GsnEvent, RelayProvider, environments, validateRelayUrl } from '@opengsn/provider'\n\nconst SXSW = (props)=> {\n\n    let tokenBurnAmount = 10;\n\n    const address = repTokenAddress;\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n    const handleClaimClick = async ()=> {\n\n        const gsnConfig = {\n            paymasterAddress: \"0x47cC6a6F490dA8E2370db24CC63E18724FB5107A\",\n          }\n\n          const provider = new ethers.providers.Web3Provider(window.ethereum);\n          const gsnProvider = RelayProvider.newProvider({ provider: window.ethereum, config: gsnConfig })\n          await gsnProvider.init()\n          const provider2 = new ethers.providers.Web3Provider(gsnProvider)\n          const signer = provider2.getSigner()\n          const aContract = new ethers.Contract(address, repTokensABI, signer);\n          console.log(aContract);\n          props.onBoastMessage(\"Burning for beer!\");\n\n          //       address from,\n        // address to,\n        // uint256 id,\n        // uint256 amount,\n        // bytes memory data\n          let tx = await aContract.safeTransferFrom(props.connectedWalletInfo.account, \"0x4D6Ed22Ed0850384622EF129932aE29D27a89eD3\", 1, tokenBurnAmount, []);\n          await tx.wait();\n          props.onBoastMessage(\"Burned for beer!\");\n\n          return;\n\n          console.log(provider);\n\n\n          new ethers.providers.getDefaultProvider()\n        const myNewProvider = new ethers.providers.Web3Provider(props.connectedWalletInfo.provider);\n        // const gsnProvider = RelayProvider.newProvider({ provider: props.connectedWalletInfo.provider, config: gsnConfig })\n        return;\n        // await gsnProvider.init()\n        // const provider2 = new ethers.providers.Web3Provider(gsnProvider)\n        // const signer = provider2.getSigner()\n        // const aContract = new ethers.Contract(address, OneOffDistributorABI, signer);\n\n        // let tx = await aContract.redeem();\n        // await tx.wait();\n        // console.log(\"Redeemed!\");\n        // return;\n\n        try{\n            let tx = await contract.redeem();\n            props.onBoastMessage(\"claiming tokens...\");\n            await tx.wait();\n            props.onBoastMessage(\"claimed tokens!\");\n        } catch(e) {\n            console.log(e);\n            props.onBoastMessage(e.reason);\n        }\n    }\n\n    return <CenteredCard className=\"minting\" title=\"Burn For Beer - Consensys\"> \n        <button onClick={handleClaimClick}>Burn {tokenBurnAmount} </button>\n    </CenteredCard>\n}\n\nexport default SXSW;","import { ethers } from \"ethers\"\nimport React, { useState, useEffect } from 'react';\nimport \"./RolesReader.css\";\nimport CenteredCard from \"../Cards/Centered Card/CenteredCard\";\nimport { repTokenAddress, repTokensABI } from \"../RepTokenInfo\";\n\nconst RolesReader = (props)=> {\n\n    useEffect(()=> {\n        getRoles();\n    }, []);\n\n    const [toText, setToText] = useState('');\n    const [selectedRole, setSelectedRole] = useState('distributor');\n\n    const handleOnSelectedRole = (event) => {\n        setSelectedRole(event.target.value);\n    }\n\n    \n    const handleOnToChanged = async (event)=> {\n        setToText(event.target.value);\n\n        console.log(await contract.MINTER_ROLE())\n    }\n\n    \n    const address = repTokenAddress;\n    const contract = new ethers.Contract(\n        address,\n        repTokensABI,\n        props.connectedWalletInfo.provider\n    );\n\n\n    const [finalString, setFinalString] = useState('');\n\n    const getRoles = async (roleInBytes)=> {\n\n        let ADMIN_ROLE = await contract.DEFAULT_ADMIN_ROLE();\n\n        let MINTER_ROLE = await contract.MINTER_ROLE();\n        console.log(\"end\");\n\n        let DISTRIBUTOR_ROLE = await contract.DISTRIBUTOR_ROLE();\n        let BURNER_ROLE = await contract.BURNER_ROLE();\n\n        let hasMinterRole = await contract.hasRole(MINTER_ROLE, props.connectedWalletInfo.account);\n        let hasDistributorRole = await contract.hasRole(DISTRIBUTOR_ROLE, props.connectedWalletInfo.account);\n        let hasBurnerRole = await contract.hasRole(BURNER_ROLE, props.connectedWalletInfo.account);\n        let hasAdminRole = await contract.hasRole(ADMIN_ROLE, props.connectedWalletInfo.account);\n\n        let currentRoles = [];\n\n        if (hasAdminRole) {\n            currentRoles.push(\"Admin\");\n        }\n\n        if (hasMinterRole) {\n            currentRoles.push(\"Minter\");\n        }\n\n        if (hasDistributorRole) {\n            currentRoles.push(\"Distributor\");\n        }\n\n        if (hasBurnerRole) {\n            currentRoles.push(\"Burner\");\n        }\n\n        let finalString = '';\n        for (let i = 0; i < currentRoles.length; i++) {\n            if (i === currentRoles.length - 1) {\n                finalString += currentRoles[i];\n            } else {\n                finalString += currentRoles[i] + \", \";\n            }\n        }\n\n        setFinalString(finalString);\n    }\n\n\n    return <CenteredCard className=\"rolesReader\" title=\"Your Roles\">\n        <p>{finalString}</p>\n        </CenteredCard>\n}\n\nexport default RolesReader;","import \"./LoggedInSection.css\";\nimport GrantRoles from \"../GrantRoles/GrantRoles\";\nimport GeneralContractInfo from \"../GeneralContractInfo/GeneralContractInfo\";\nimport NavBar from \"../NavBar/NavBar\";\nimport React, { useState } from 'react';\nimport Distributing from \"../Distributing/Distributing\";\nimport Minting from \"../Minting/Minting\";\nimport Balance from \"../Balance/Balance\";\nimport SXSW from \"../SXSW/SXSW\";\nimport RolesReader from \"../Role Readers/RolesReader\";\n\nconst LoggedInSection = (props)=> {\n\n    const handleLogger = (message)=> {\n        props.onBoastMessage(message);\n    }   \n\n    const [contractInfoTrigger, setContractInfoTrigger] = useState(0);\n\n\n\n    const [output, setOutput] = useState(<Balance onBoastMessage={handleLogger} connectedWalletInfo={props.connectedWalletInfo}></Balance>);\n\n    const handleStateSet = (state)=> {\n\n        if (state === 'mint') {\n            setOutput(<Minting onBoastMessage={handleLogger} connectedWalletInfo={props.connectedWalletInfo}></Minting>);\n\n        } else if (state === 'distribute') {\n            setOutput(<Distributing onBoastMessage={handleLogger} connectedWalletInfo={props.connectedWalletInfo}></Distributing>);\n      \n        } else if (state === 'roleGrant') {\n            setOutput(<GrantRoles onBoastMessage={handleLogger} connectedWalletInfo={props.connectedWalletInfo}></GrantRoles>);\n        } else if (state === 'contractInfo') {\n            setContractInfoTrigger((contractInfoTrigger) => {\n                contractInfoTrigger = contractInfoTrigger + 1;\n                setOutput(<GeneralContractInfo onBoastMessage={handleLogger} onContractPageSet={contractInfoTrigger} connectedWalletInfo={props.connectedWalletInfo}></GeneralContractInfo>);\n            });\n        } else if (state === 'balance') {\n            setOutput(<Balance onBoastMessage={handleLogger} connectedWalletInfo={props.connectedWalletInfo}></Balance>);\n        } else if (state === 'SXSW') {\n            setOutput(<SXSW onBoastMessage={handleLogger} connectedWalletInfo={props.connectedWalletInfo}></SXSW>);\n        }\n    }\n\n    return <div className=\"LoggedInSection\">\n        <RolesReader connectedWalletInfo={props.connectedWalletInfo}></RolesReader>\n    <NavBar onStateSet={handleStateSet}></NavBar>\n    { output }\n    </div>\n}\n\nexport default LoggedInSection;","import \"./App.css\";\nimport React, { useState, useEffect } from 'react';\nimport \"./Components/Buttons/buttons.css\";\nimport ConnectWallet from \"./Components/ConnectWallet/ConnectWallet\";\nimport Logger from \"./Components/Logger/Logger\";\nimport LoggedInSection from \"./Components/LoggedInSection/LoggedInSection\";\n\nfunction App() {\n\n  useEffect(() => {\n    document.title = \"ATX DAO Rep\"\n    }, []);\n\n\n  const [connectedWalletInfo, setConnectedWalletInfo] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleLogin = (info)=> {\n    setConnectedWalletInfo(info);\n\n    setLoginComponents(\n      info.provider === undefined ?\n        <div></div> : \n        <LoggedInSection onBoastMessage={handleLogger} connectedWalletInfo={info}></LoggedInSection>\n        );\n  }\n\n  const handleLogger = (message)=> {\n    setMessage(message);\n  }\n\n  const [loginComponents, setLoginComponents] = useState('');\n\n  let output = <div>\n  <ConnectWallet onBoastMessage={handleLogger} onWalletConnected={handleLogin}></ConnectWallet>\n  <Logger boastMessage={message} connectedWalletInfo={connectedWalletInfo}></Logger>\n  {loginComponents}</div>;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        { output }\n      </header>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const repTokenAddress = \"0x57AA5fd0914A46b8A426cC33DB842D1BB1aeADa2\";\nconst { abi } = require(\"../RepTokensABI.js\");\n\nmodule.exports = { repTokenAddress, repTokensABI: abi };","const abi = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"admins\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_maxMintAmountPerTx\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"OperatorNotAllowed\",\n    \"type\": \"error\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"ApprovalForAll\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"BurnedRedeemable\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"coreAddress\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"destination\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"DestinationWalletSet\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Distributed\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"lifetimeBalance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"redeemableBalance\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"OwnershipOfTokensMigrated\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"previousOwner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"OwnershipTransferred\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Paused\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"previousAdminRole\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"newAdminRole\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"name\": \"RoleAdminChanged\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"RoleGranted\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"RoleRevoked\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256[]\",\n        \"name\": \"values\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"TransferBatch\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"TransferSingle\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"value\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"URI\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"Unpaused\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"BURNER_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"DEFAULT_ADMIN_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"DISTRIBUTOR_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"MINTER_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"OPERATOR_FILTER_REGISTRY\",\n    \"outputs\": [\n      {\n        \"internalType\": \"contract IOperatorFilterRegistry\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"TOKEN_MIGRATOR_ROLE\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"accounts\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"name\": \"balanceOfBatch\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"destinationWallets\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"distribute\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"to\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"amount\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"distributeBatch\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenID\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getOwnersOfTokenID\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"\",\n        \"type\": \"address[]\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"tokenID\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getOwnersOfTokenIDLength\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"name\": \"getRoleAdmin\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"\",\n        \"type\": \"bytes32\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"getTrustedForwarder\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"forwarder\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"grantRole\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"hasRole\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isApprovedForAll\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"forwarder\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isTrustedForwarder\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"maxMintAmountPerTx\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"migrateOwnershipOfTokens\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address[]\",\n        \"name\": \"to\",\n        \"type\": \"address[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"amount\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"mintBatch\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"paused\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"renounceOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"renounceRole\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes32\",\n        \"name\": \"role\",\n        \"type\": \"bytes32\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"revokeRole\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"ids\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"amounts\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeBatchTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"data\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"safeTransferFrom\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"operator\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"approved\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"name\": \"setApprovalForAll\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"destination\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"setDestinationWallet\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"setMaxMintAmount\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"forwarder\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"setTrustedForwarder\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"togglePause\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"newOwner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"transferOwnership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"_tokenid\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"uri\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"pure\",\n    \"type\": \"function\"\n  }\n];\n\nmodule.exports = { abi };","const oneOffAddress = \"0x27E8BCDCB6167fF621dbb4fC5a05A825822204aC\";\nconst { abi } = require(\"../OneOffDistributorABI.js\");\n\nmodule.exports = { oneOffAddress, OneOffDistributorABI: abi };  ","const abi = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"repToken\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"forwarder\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"uint256[]\",\n        \"name\": \"\",\n        \"type\": \"uint256[]\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"onERC1155BatchReceived\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"bytes\",\n        \"name\": \"\",\n        \"type\": \"bytes\"\n      }\n    ],\n    \"name\": \"onERC1155Received\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"redeem\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"sayHello\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"pure\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"bytes4\",\n        \"name\": \"interfaceId\",\n        \"type\": \"bytes4\"\n      }\n    ],\n    \"name\": \"supportsInterface\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];\n\n  module.exports = { abi };"],"sourceRoot":""}